---
export interface Props {
  title: string
  description: string
  lang: string
  canonical: string
}
import SpeedInsights from "@vercel/speed-insights/astro"

const { title, description, lang, canonical } = Astro.props
---

<!doctype html>
<html lang={lang} class="">
  <head>
 
    <meta charset="UTF-8" /> 
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Favicon -->
    <link rel="icon" href="./image.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="shortcut icon" href="./image.svg" type="image/x-icon" />
    <!-- apple icon -->
    <link rel="apple-touch-icon" href="./image.svg" />
    <!-- apple splash screen images -->

    <link rel="icon" href="./image.svg" type="image/x-icon" />
    <link rel="canonical" href={canonical} />
    <meta name="description" content={description} />
    <meta name="robots" content="index,follow" />
    <meta property="og:title" content="Eduardo Guette" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={canonical} />
    <meta property="og:description" content={description} />
    <meta property="og:image:width" content="200" />
    <meta property="og:image:width" content="200" />
    <meta name="twitter:card" content="./me.png" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta name="twitter:site" content="@eduardoguette" />
    <meta name="twitter:creator" content="@eduardoguette" />
    <meta property="twitter:image" content="./me.png" />
    <meta property="og:image" content="./me.png" />
    <meta name="twitter:card" content="summary" />
    <meta
      name="keywords"
      content="Eduardo Guette, Eduardo, Guette, Web developer, react, javascript"
    />
    <meta name="author" content="Eduardo Guette" />
    <SpeedInsights />
    <title>{title}</title>
  </head>
</html>
<body >
  <script is:inline>
    console.log(
      "%c Eduardo Guette ðŸš€",
      "background: #000; color: #fff; font-size: 2rem; padding: 0.5rem 1rem; border-radius: 0.5rem;"
    );
    console.log(
      "%c Web Developer",
      "background: #000; color: #fff; font-size: 1rem; padding: 0.5rem 1rem; border-radius: 0.5rem;"
    );
    const theme = (() => {
      if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();
  
    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }
    window.localStorage.setItem("theme", theme);
  </script>
  <div class="scroll-smooth md:mb-0 w-full dark:text-white dark:bg-black">
    <slot />
  </div>
</body><style is:global>
  :root {
    --accent: 124, 58, 237;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      #2b3d4f 30%,
      #3398db 60%
    );
  }
  html {
    font-family:
      ui-sans-serif,
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      Segoe UI,
      Roboto,
      Helvetica Neue,
      Arial,
      Noto Sans,
      sans-serif,
      Apple Color Emoji,
      Segoe UI Emoji,
      Segoe UI Symbol,
      Noto Color Emoji;
    scroll-behavior: smooth;

    scroll-padding-top: 100px;
  }
  body {
    overscroll-behavior: none;
  }
  .grid-proyects {
    grid-template-areas: 'index0 index0 index1 index1' 'index0 index0 index2 index3';
    grid-template-rows: 70% 25%;
  }

  .grid-bento {
    grid-template-areas:
      'item0 item1 item3'
      'item0 item2 item2'
      'item0 item2 item2';
  }
  .header h1 {
    overflow: hidden; /* Ensures the content is not revealed until the animation */
    border-right: 0.15em solid rbg(99, 102, 241); /* The typwriter cursor */
    white-space: nowrap; /* Keeps the content on a single line */
    margin: 0 auto; /* Gives that scrolling effect as the typing happens */
    letter-spacing: 0.01em; /* Adjust as needed */
    animation:
      typing 1.2s steps(5, end),
      blink-caret 0.75s step-end infinite;
    width: max-content;
  }

  /* The typing effect */
  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }
  .reveal li {
    animation: reveal linear both;
    animation-timeline: view();
    animation-range: entry 30% cover 20%;
  }
  @keyframes reveal {
    from {
      opacity: 0;
      translate: 0 100px;
      scale: 0.7;
    }
    to {
      opacity: 1;
      translate: 0 0;
      scale: 1;
    }
  }
  /* The typewriter cursor effect */
  @keyframes blink-caret {
    from,
    to {
      border-color: transparent;
    }
    50% {
      border-color: rbg(99, 102, 241);
    }
  }
  /*   .card-experience {
    grid-template-areas:
      'companyName date'
      'position position'
      'responsabilities responsabilities';
  } */
</style>
